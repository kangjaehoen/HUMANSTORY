<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hs.mapper.EmpMapper">

	<sql id="empcriteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()"> empNum like '%'||#{keyword}||'%' </when>
						<when test="type == 'C'.toString()"> empName like '%'||#{keyword}||'%' </when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<select id="getList" resultType="org.hs.domain.EmployeeVO">
	<![CDATA[
		select*from employee where empNum>0
	]]>
	</select>

	<select id="getListWithPaging"
		resultType="org.hs.domain.EmployeeVO">
	<![CDATA[
	SELECT
		empNum,empName,pw,job,phoneNum,hireDate,annualLeaveNum,workdate,birthdate
	FROM
		(
			select
				rownum rn,empNum,empName, pw,job,phoneNum,hireDate,annualLeaveNum,workdate,birthdate
			FROM EMPLOYEE
			where
	]]>
		<include refid="empcriteria" />
	 <![CDATA[
             rownum <= #{emppageNum}*#{empamount}
         )
         WHERE rn > (#{emppageNum}-1)*#{empamount}

      ]]>
	</select>
	<select id="getTotalCount" resultType="int">
	<![CDATA[
			select count(*) from EMPLOYEE where
			]]>

		<include refid="empcriteria" />
			
			<![CDATA[
			adminNum >= 0
		 ]]>
	</select>


	<resultMap type="org.hs.domain.EmployeeVO"
		id="EmpDeptResultMap">
		<id property="empNum" column="EMPNUM" />
		<result property="empName" column="EMPNAME" />
		<association property="department"
			javaType="org.hs.domain.DeptVO">
			<result property="deptName" column="DEPTNAME" />
		</association>
	</resultMap>

	<resultMap type="org.hs.domain.EmployeeVO" id="managerMap">
    <id property="empNum" column="empNum" />
    <result property="empNum" column="empNum" />
    <result property="empName" column="empName" />
    <result property="pw" column="pw" />
    <result property="job" column="job" />
    <result property="phoneNum" column="phoneNum" />
    <result property="hireDate" column="hireDate" />
    <result property="email" column="email" />
    <result property="annualLeaveNum" column="annualLeaveNum" />
    <result property="address" column="address" />
    <result property="workDate" column="workDate" />
    <result property="birthDate" column="birthDate" />
    <result property="adminNum" column="adminNum" />
    <result property="authNum" column="authNum" />
    <result property="deptNum" column="deptNum" />
    <collection property="authList" resultMap="authMap"></collection>
    <!-- <collection property="deptList" resultMap="EmpDeptResultMap"></collection> -->
</resultMap>


	<resultMap type="org.hs.domain.AuthVO" id="authMap">
		<result property="empNum" column="empNum" />
		<result property="auth" column="auth" />
	</resultMap>

	<select id="EmpjoinDept" resultMap="EmpDeptResultMap">
		SELECT e.EMPNUM, e.EMPNAME, d.DEPTNAME
		FROM Employee e
		JOIN DEPARTMENTS d ON e.DEPTNUM = d.DEPTNUM

	</select>

	<select id="authread" resultMap="managerMap">

		SELECT
		e.empNum, e.EMPNAME, e.pw, e.enabled, ea.auth
		FROM Employee e 
		JOIN EMPLOYEE_AUTH ea ON e.empNum=ea.empNum
		where e.empNum=#{empNum}

	</select>



	<select id="read" resultType="org.hs.domain.EmployeeVO">
		select*from employee where
		empNum=#{empNum}
	</select>

	<insert id="insertEmpInfo">
		INSERT INTO employee (empNum, empName, pw, job,
		phoneNum,hireDate,
		annualLeaveNum,workDate,birthDate, adminNum,
		authNum, deptNum)
		VALUES (empNum_seq.NEXTVAL, #{empName},#{pw}, #{job},
		#{phoneNum},#{hireDate}, #{annualLeaveNum}, #{workDate},#{birthDate},
		#{adminNum}, #{authNum}, #{deptNum})
	</insert>

	<update id="update">
		update employee set
		empName=#{empName},
		pw=#{pw},
		job=#{job},
		phoneNum=#{phoneNum},
		hireDate=#{hireDate},
		annualLeaveNum=#{annualLeaveNum},
		workDate=#{workDate},
		birthDate=#{birthDate},
		adminNum=#{adminNum},
		authNum=#{authNum},
		deptNum=#{deptNum}

		where empNum=#{empNum}
	</update>

	<delete id="delete">
		delete employee where empNum=#{empNum}
	</delete>

</mapper>